USE MASTER
GO
IF DB_ID('BASE_COBRANZA') IS NOT NULL 
	DROP DATABASE BASE_COBRANZA
GO
CREATE DATABASE BASE_COBRANZA
GO
USE BASE_COBRANZA
GO
-----------------------------------------------TABLA DISTRITO Y SUS STORE PROCEDURES-------------------------------------------------
CREATE TABLE DISTRITO(
ID_DISTRITO INT PRIMARY KEY IDENTITY(1,1),
NOMBRE VARCHAR(100)
)
GO
INSERT INTO DISTRITO VALUES ('ANCÓN'),('ATE'),('BARRANCO'),('BREÑA'),('CARABAYLLO'),('CERCADO DE LIMA'),
('CHACLACAYO'),('CHORRILLOS'),('CIENEGUILLA'),('COMAS'),('EL AGUSTINO'),('INDEPENDENCIA'),('JESÚS MARÍA'),('LA MOLINA'),('LA VICTORIA'),
('LINCE'),('LOS OLIVOS'),('LURIGANCHO'),('LURÍN'),('MAGDALENA DEL MAR'),('MIRAFLORES'),('PACHACÁMAC'),('PUCUSANA'),('PUEBLO LIBRE'),
('PUENTE PIEDRA'),('PUNTA HERMOSA'),('PUNTA NEGRA'),('RÍMAC'),('SAN BARTOLO'),('SAN BORJA'),('SAN ISIDRO'),('SAN JUAN DE LURIGANCHO'),
('SAN JUAN DE MIRAFLORES'),('SAN LUIS'),('SAN MARTIN DE PORRES'),('SAN MIGUEL'),('SANTA ANITA'),('SANTA MARÍA DEL MAR'),('SANTA ROSA'),
('SANTIAGO DE SURCO'),('SURQUILLO'),('VILLA EL SALVADOR'),('VILLA MARIA DEL TRIUNFO')
GO
IF OBJECT_ID('SP_LISTAR_DISTRITO') IS NOT NULL
	DROP PROCEDURE SP_LISTAR_DISTRITO
GO
CREATE PROCEDURE SP_LISTAR_DISTRITO
AS
BEGIN SELECT*FROM DISTRITO
END
GO
--------------------------------------------------TABLA PROCURADOR Y SUS STORE PROCEDURES----------------------------------------------
CREATE TABLE PROCURADOR(
ID_PROCURADOR INT PRIMARY KEY IDENTITY(1,1),
NOMBRE_PROCURADOR VARCHAR(255),
)
GO
CREATE TABLE PROCURADOR_DISTRITOS(
ID_PROCURADOR INT,
ID_DISTRITO INT,
PRIMARY KEY(ID_PROCURADOR,ID_DISTRITO),
CONSTRAINT FK_ID_PROCURADOR  FOREIGN KEY(ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
CONSTRAINT FK_ID_DISTRITO  FOREIGN KEY(ID_DISTRITO) REFERENCES DISTRITO(ID_DISTRITO)
)
GO
--Listar procurador
IF OBJECT_ID('SP_LISTAR_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_LISTAR_PROCURADOR
GO
CREATE PROCEDURE SP_LISTAR_PROCURADOR
AS
BEGIN SELECT*FROM PROCURADOR
END
GO
--Guardar procurador
IF OBJECT_ID('SP_GUARDAR_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_GUARDAR_PROCURADOR
GO
CREATE PROCEDURE SP_GUARDAR_PROCURADOR
@NOMBRE_PROCURADOR VARCHAR(255)
AS
BEGIN
	INSERT INTO PROCURADOR VALUES(@NOMBRE_PROCURADOR)
END
EXEC SP_LISTAR_PROCURADOR
EXEC SP_ELIMINAR_PROCURADOR 1
GO
--Actualizar procurador
IF OBJECT_ID('SP_ACTUALIZAR_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_ACTUALIZAR_PROCURADOR
GO
CREATE PROCEDURE SP_ACTUALIZAR_PROCURADOR
@ID_PROCURADOR INT,
@NOMBRE_PROCURADOR VARCHAR(255)
AS
BEGIN
    UPDATE PROCURADOR
    SET NOMBRE_PROCURADOR = @NOMBRE_PROCURADOR
    WHERE ID_PROCURADOR = @ID_PROCURADOR
END
GO
--Eliminar procurador
IF OBJECT_ID('SP_ELIMINAR_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_ELIMINAR_PROCURADOR
GO
CREATE PROCEDURE SP_ELIMINAR_PROCURADOR
@ID_PROCURADOR INT
AS
BEGIN
    DELETE FROM PROCURADOR
    WHERE ID_PROCURADOR = @ID_PROCURADOR
END
GO
--------------------------STORE PROCEDURES PARA TABLA INTERMEDIA-----------------------------------------
IF OBJECT_ID('SP_ELIMINAR_DISTRITO_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_ELIMINAR_DISTRITO_PROCURADOR
GO
CREATE PROCEDURE SP_ELIMINAR_DISTRITO_PROCURADOR
@ID_PROCURADOR INT,
@ID_DISTRITO INT
AS
BEGIN
    DELETE FROM PROCURADOR_DISTRITOS
    WHERE ID_PROCURADOR = @ID_PROCURADOR AND ID_DISTRITO=@ID_DISTRITO
END
GO

IF OBJECT_ID('SP_AGREGAR_DISTRITO_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_AGREGAR_DISTRITO_PROCURADOR
GO
CREATE PROCEDURE SP_AGREGAR_DISTRITO_PROCURADOR
@ID_PROCURADOR INT,
@ID_DISTRITO INT
AS
EXEC SP_LISTAR_PROCURADOR
EXEC SP_LISTAR_DISTRITOS_PROCURADOR 2
BEGIN
    INSERT INTO PROCURADOR_DISTRITOS
    VALUES (@ID_PROCURADOR,@ID_DISTRITO)
END
GO
IF OBJECT_ID('SP_LISTAR_DISTRITOS_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_LISTAR_DISTRITOS_PROCURADOR
GO
CREATE PROCEDURE SP_LISTAR_DISTRITOS_PROCURADOR
@ID_PROCURADOR INT
AS
BEGIN
    SELECT PD.ID_DISTRITO,D.NOMBRE FROM PROCURADOR_DISTRITOS PD 
										INNER JOIN DISTRITO D ON D.ID_DISTRITO=PD.ID_DISTRITO WHERE PD.ID_PROCURADOR=@ID_PROCURADOR 
END
GO
CREATE PROCEDURE SP_LISTAR_PROCURADORES_DISTRITO
AS
BEGIN
	SELECT P.ID_PROCURADOR, P.NOMBRE_PROCURADOR, D.NOMBRE AS DISTRITO
    FROM PROCURADOR P
    LEFT JOIN PROCURADOR_DISTRITOS PD ON P.ID_PROCURADOR = PD.ID_PROCURADOR
    LEFT JOIN DISTRITO D ON PD.ID_DISTRITO = D.ID_DISTRITO
END
GO
--------------------------------------------------TABLA APODERADO Y SUS STORE PROCEDURES----------------------------------------------
CREATE TABLE APODERADO(
ID_APODERADO INT PRIMARY KEY IDENTITY(1,1),
NOMBRE_APODERADO VARCHAR(255),
)
GO
CREATE TABLE APODERADO_DISTRITOS(
ID_APODERADO INT,
ID_DISTRITO INT,
PRIMARY KEY(ID_APODERADO,ID_DISTRITO),
CONSTRAINT FK_ID_APODERADO  FOREIGN KEY(ID_APODERADO) REFERENCES APODERADO(ID_APODERADO),
CONSTRAINT FK_ID_DISTRITO_2  FOREIGN KEY(ID_DISTRITO) REFERENCES DISTRITO(ID_DISTRITO)
)
GO
--Listar apoderado
IF OBJECT_ID('SP_LISTAR_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_LISTAR_APODERADO
GO
CREATE PROCEDURE SP_LISTAR_APODERADO
AS
BEGIN SELECT*FROM APODERADO
END
GO
--Guardar apoderado
IF OBJECT_ID('SP_GUARDAR_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_GUARDAR_APODERADO
GO
CREATE PROCEDURE SP_GUARDAR_APODERADO
@NOMBRE_APODERADO VARCHAR(255)
AS
BEGIN
	INSERT INTO APODERADO VALUES(@NOMBRE_APODERADO)
END
GO
--Actualizar apoderado
IF OBJECT_ID('SP_ACTUALIZAR_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_ACTUALIZAR_APODERADO
GO
CREATE PROCEDURE SP_ACTUALIZAR_APODERADO
@ID_APODERADO INT,
@NOMBRE_APODERADO VARCHAR(255)
AS
BEGIN
    UPDATE APODERADO
    SET NOMBRE_APODERADO = @NOMBRE_APODERADO
    WHERE ID_APODERADO = @ID_APODERADO
END
GO
--Eliminar procurador
IF OBJECT_ID('SP_ELIMINAR_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_ELIMINAR_APODERADO
GO
CREATE PROCEDURE SP_ELIMINAR_APODERADO
@ID_APODERADO INT
AS
BEGIN
    DELETE FROM APODERADO
    WHERE ID_APODERADO = @ID_APODERADO
END
GO
--------------------------STORE PROCEDURES PARA TABLA INTERMEDIA-----------------------------------------
IF OBJECT_ID('SP_ELIMINAR_DISTRITO_PROCURADOR') IS NOT NULL
	DROP PROCEDURE SP_ELIMINAR_DISTRITO_PROCURADOR
GO
CREATE PROCEDURE SP_ELIMINAR_DISTRITO_APODERADO
@ID_APODERADO INT,
@ID_DISTRITO INT
AS
BEGIN
    DELETE FROM APODERADO_DISTRITOS
    WHERE ID_APODERADO = @ID_APODERADO AND ID_DISTRITO=@ID_DISTRITO
END
GO

IF OBJECT_ID('SP_AGREGAR_DISTRITO_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_AGREGAR_DISTRITO_APODERADO
GO
CREATE PROCEDURE SP_AGREGAR_DISTRITO_APODERADO
@ID_APODERADO INT,
@ID_DISTRITO INT
AS
BEGIN
    INSERT INTO APODERADO_DISTRITOS
    VALUES (@ID_APODERADO,@ID_DISTRITO)
END
GO
IF OBJECT_ID('SP_LISTAR_DISTRITOS_APODERADO') IS NOT NULL
	DROP PROCEDURE SP_LISTAR_DISTRITOS_APODERADO
GO
CREATE PROCEDURE SP_LISTAR_DISTRITOS_APODERADO
@ID_APODERADO INT
AS
BEGIN
    SELECT AD.ID_DISTRITO,D.NOMBRE FROM APODERADO_DISTRITOS AD 
										INNER JOIN DISTRITO D ON D.ID_DISTRITO=AD.ID_DISTRITO WHERE AD.ID_APODERADO=@ID_APODERADO 
END
GO
CREATE PROCEDURE SP_LISTAR_APODERADOS_DISTRITO
AS
BEGIN
	SELECT A.ID_APODERADO, A.NOMBRE_APODERADO, D.NOMBRE AS DISTRITO
    FROM APODERADO A
    LEFT JOIN APODERADO_DISTRITOS AP ON A.ID_APODERADO = AP.ID_APODERADO
    LEFT JOIN DISTRITO D ON AP.ID_DISTRITO = D.ID_DISTRITO
END
GO

---------------------------------------------------ROLES Y USUARIOS--------------------------------------------------------------------
CREATE TABLE ROL (
    ID_ROL INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE VARCHAR(255) NOT NULL
)
GO

-- Tabla de Usuarios
CREATE TABLE USUARIO (
    ID_USUARIO INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE_USUARIO VARCHAR(255) NOT NULL,
    CONTRA_USUARIO VARCHAR(255) NOT NULL
)
GO
-- Tabla intermedia UsuariosRoles para establecer la relación muchos a muchos
CREATE TABLE USUARIOS_ROLES (
    ID_USUARIO INT,
    ID_ROL INT,
    PRIMARY KEY (ID_USUARIO, ID_ROL),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_ROL) REFERENCES ROL(ID_ROL)
)
GO
----------STORE PROCEDURES PARA ROLES Y USUARIOS
CREATE PROCEDURE SP_ELIMINAR_USUARIO
    @ID_USUARIO INT
AS
BEGIN
    DELETE FROM USUARIO
    WHERE ID_USUARIO = @ID_USUARIO
END
GO
CREATE PROCEDURE SP_ELIMINAR_ROL
    @ID_ROL INT
AS
BEGIN
    DELETE FROM ROL
    WHERE ID_ROL = @ID_ROL
END
GO
CREATE PROCEDURE SP_ELIMINAR_ROL_USUARIO
    @ID_USUARIO INT,
    @ID_ROL INT
AS
BEGIN
    DELETE FROM USUARIOS_ROLES
    WHERE ID_USUARIO = @ID_USUARIO AND ID_ROL = @ID_ROL;
END
GO
CREATE PROCEDURE SP_BUSCAR_USUARIO_POR_NOMBRE
    @NOMBRE_USUARIO VARCHAR(255)
AS
BEGIN
    SELECT *
    FROM USUARIO
    WHERE NOMBRE_USUARIO = @NOMBRE_USUARIO;
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_USUARIO
    @ID_USUARIO INT,
    @NOMBRE_USUARIO VARCHAR(255),
    @CONTRA_USUARIO VARCHAR(255)
AS
BEGIN
    UPDATE USUARIO
    SET NOMBRE_USUARIO = @NOMBRE_USUARIO, CONTRA_USUARIO = @CONTRA_USUARIO
    WHERE ID_USUARIO = @ID_USUARIO
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_ROL
    @ID_ROL INT,
    @NOMBRE VARCHAR(255)
AS
BEGIN
    UPDATE ROL
    SET NOMBRE = @NOMBRE
    WHERE ID_ROL = @ID_ROL;
END
GO
CREATE PROCEDURE SP_GUARDAR_USUARIO
    @NOMBRE_USUARIO VARCHAR(255),
    @CONTRA_USUARIO VARCHAR(255)
AS
BEGIN
    INSERT INTO USUARIO(NOMBRE_USUARIO, CONTRA_USUARIO)
    VALUES (@NOMBRE_USUARIO, @CONTRA_USUARIO)
END
GO
CREATE PROCEDURE SP_GUARDAR_ROL
    @NOMBRE VARCHAR(50)
AS
BEGIN
    INSERT INTO ROL (NOMBRE)
    VALUES (@NOMBRE)
END
GO
CREATE PROCEDURE SP_ASIGNAR_ROL_USUARIO
    @ID_USUARIO INT,
    @ID_ROL INT
AS
BEGIN
    INSERT INTO USUARIOS_ROLES (ID_USUARIO, ID_ROL)
    VALUES (@ID_USUARIO, @ID_ROL)
END
GO
CREATE PROCEDURE SP_LISTAR_USUARIOS_ROLES
AS
BEGIN
	SELECT u.ID_USUARIO, u.NOMBRE_USUARIO, u.CONTRA_USUARIO, r.Nombre AS Rol
    FROM USUARIO u
    LEFT JOIN USUARIOS_ROLES ur ON u.ID_USUARIO = ur.ID_USUARIO
    LEFT JOIN ROL r ON ur.ID_ROL = r.ID_ROL
END
GO
CREATE PROCEDURE SP_LISTAR_ROLES_USUARIO
    @ID_USUARIO INT
AS
BEGIN
    SELECT R.* FROM ROL R
    INNER JOIN USUARIOS_ROLES UR ON R.ID_ROL = UR.ID_ROL
    WHERE UR.ID_USUARIO = @ID_USUARIO
END
GO
CREATE PROCEDURE SP_LISTAR_USUARIO
AS
BEGIN
    SELECT*FROM USUARIO
END
GO
CREATE PROCEDURE SP_LISTAR_ROL
AS
BEGIN
    SELECT * FROM ROL;
END
GO
CREATE PROCEDURE SP_SEGURIDAD_USUARIO
@usu varchar(255),
@clav varchar(255)
AS
SELECT NOMBRE_USUARIO,CONTRA_USUARIO FROM USUARIO WHERE NOMBRE_USUARIO=@usu and CONTRA_USUARIO=@clav
GO
------------------------------------------------TABLA STATUS JUDICIAL Y STORE PROCEDURES----------------------------------------------
CREATE TABLE STATUS_JUDICIAL(
ID_STATUS_JUDICIAL INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_STATUS_JUDICIAL
AS
BEGIN
	SELECT*FROM STATUS_JUDICIAL
END
GO
CREATE PROCEDURE SP_GUARDAR_STATUS_JUDICIAL
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO STATUS_JUDICIAL VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_STATUS_JUDICIAL
    @ID_STATUS_JUDICIAL INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE STATUS_JUDICIAL
    SET ACCION = @ACCION
    WHERE ID_STATUS_JUDICIAL = @ID_STATUS_JUDICIAL;
END
GO
CREATE PROCEDURE SP_ELIMINAR_STATUS_JUDICIAL
    @ID_STATUS_JUDICIAL INT
AS
BEGIN
    DELETE FROM STATUS_JUDICIAL
    WHERE ID_STATUS_JUDICIAL = @ID_STATUS_JUDICIAL
END
GO
------------------------------------------------------TABLA STATUS PODER JUDICIAL Y STORE PROCEDURES---------------------------------
CREATE TABLE STATUS_PODER_JUDICIAL(
ID_STATUS_PODER_JUDICIAL INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_STATUS_PODER_JUDICIAL
AS
BEGIN
	SELECT*FROM STATUS_PODER_JUDICIAL
END
GO
CREATE PROCEDURE SP_GUARDAR_STATUS_PODER_JUDICIAL
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO STATUS_PODER_JUDICIAL VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_STATUS_PODER_JUDICIAL
    @ID_STATUS_PODER_JUDICIAL INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE STATUS_PODER_JUDICIAL
    SET ACCION = @ACCION
    WHERE ID_STATUS_PODER_JUDICIAL = @ID_STATUS_PODER_JUDICIAL
END
GO
CREATE PROCEDURE SP_ELIMINAR_STATUS_PODER_JUDICIAL
    @ID_STATUS_PODER_JUDICIAL INT
AS
BEGIN
    DELETE FROM STATUS_PODER_JUDICIAL
    WHERE ID_STATUS_PODER_JUDICIAL = @ID_STATUS_PODER_JUDICIAL
END
GO
---------------------------------------------------TABLA TIPO DE IMPULSO Y STORE PROCEDURES-------------------------------------------- 
CREATE TABLE TIPO_IMPULSO(
ID_TIPO_IMPULSO INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_TIPO_IMPULSO
AS
BEGIN
	SELECT*FROM TIPO_IMPULSO
END
GO
CREATE PROCEDURE SP_GUARDAR_TIPO_IMPULSO
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO TIPO_IMPULSO VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_TIPO_IMPULSO
    @ID_TIPO_IMPULSO INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE TIPO_IMPULSO
    SET ACCION = @ACCION
    WHERE ID_TIPO_IMPULSO = @ID_TIPO_IMPULSO
END
GO
CREATE PROCEDURE SP_ELIMINAR_TIPO_IMPULSO
    @ID_TIPO_IMPULSO INT
AS
BEGIN
    DELETE FROM TIPO_IMPULSO
    WHERE ID_TIPO_IMPULSO = @ID_TIPO_IMPULSO
END
GO
---------------------------------------------------TABLA STATUS ARBITRAJE Y STORE PROCEDURES-------------------------------------------
CREATE TABLE STATUS_ARBITRAJE(
ID_STATUS_ARBITRAJE INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_STATUS_ARBITRAJE
AS
BEGIN
	SELECT*FROM STATUS_ARBITRAJE
END
GO
CREATE PROCEDURE SP_GUARDAR_STATUS_ARBITRAJE
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO STATUS_ARBITRAJE VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_STATUS_ARBITRAJE
    @ID_STATUS_ARBITRAJE INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE STATUS_ARBITRAJE
    SET ACCION = @ACCION
    WHERE ID_STATUS_ARBITRAJE = @ID_STATUS_ARBITRAJE
END
GO
CREATE PROCEDURE SP_ELIMINAR_STATUS_ARBITRAJE
    @ID_STATUS_ARBITRAJE INT
AS
BEGIN
    DELETE FROM STATUS_ARBITRAJE
    WHERE ID_STATUS_ARBITRAJE = @ID_STATUS_ARBITRAJE
END
GO
----------------------------------------------TABLA DEMANDA PRINCIPAL Y STORE PROCEDURES-----------------------------------------------
CREATE TABLE DEMANDA_PRINCIPAL(
ID_DEMANDA_PRINCIPAL INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_DEMANDA_PRINCIPAL
AS
BEGIN
	SELECT*FROM DEMANDA_PRINCIPAL
END
GO
CREATE PROCEDURE SP_GUARDAR_DEMANDA_PRINCIPAL
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO DEMANDA_PRINCIPAL VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_DEMANDA_PRINCIPAL
    @ID_DEMANDA_PRINCIPAL INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE DEMANDA_PRINCIPAL
    SET ACCION = @ACCION
    WHERE ID_DEMANDA_PRINCIPAL = @ID_DEMANDA_PRINCIPAL
END
GO
CREATE PROCEDURE SP_ELIMINAR_DEMANDA_PRINCIPAL
    @ID_DEMANDA_PRINCIPAL INT
AS
BEGIN
    DELETE FROM DEMANDA_PRINCIPAL
    WHERE ID_DEMANDA_PRINCIPAL = @ID_DEMANDA_PRINCIPAL
END
GO
------------------------------------------------TABLA PASO COBRANZA Y STORE PROCEDURES------------------------------------------------
CREATE TABLE PASO_COBRANZA(
ID_PASO_COBRANZA INT PRIMARY KEY IDENTITY(1,1),
ACCION VARCHAR(255)
)
GO
CREATE PROCEDURE SP_LISTAR_PASO_COBRANZA
AS
BEGIN
	SELECT*FROM PASO_COBRANZA
END
GO
CREATE PROCEDURE SP_GUARDAR_PASO_COBRANZA
@ACCION VARCHAR(255)
AS
BEGIN
	INSERT INTO PASO_COBRANZA VALUES(@ACCION)
END
GO
CREATE PROCEDURE SP_ACTUALIZAR_PASO_COBRANZA
    @ID_PASO_COBRANZA INT,
    @ACCION VARCHAR(255)
AS
BEGIN
    UPDATE PASO_COBRANZA
    SET ACCION = @ACCION
    WHERE ID_PASO_COBRANZA = @ID_PASO_COBRANZA
END
GO
CREATE PROCEDURE SP_ELIMINAR_PASO_COBRANZA
    @ID_PASO_COBRANZA INT
AS
BEGIN
    DELETE FROM PASO_COBRANZA
    WHERE ID_PASO_COBRANZA = @ID_PASO_COBRANZA
END
GO
----------------------------------------------------------BASE GENERAL--------------------------------------------------------------------
CREATE TABLE BASE_GENERAL(
ID  INT PRIMARY KEY IDENTITY(1,1),
ALBUM INT,
FECHA_CONSIGNACION DATE,
MARCA VARCHAR(255),
MODELO VARCHAR (255),
PRECIO_PACTADO DECIMAL(10,2),
FECHA_COBRO DATE,
CONTRATO INT,
DNI VARCHAR(8),
NOMBRE_PROPIETARIO VARCHAR(255),
TIPO VARCHAR(10),
CELULAR VARCHAR(9),
CORREO VARCHAR(255),
DIRECCION VARCHAR(255),
DISTRITO VARCHAR(100),
TIPO_PENALIDAD VARCHAR(255),
STATUS_CLIENTE VARCHAR(255),
PAGARE VARCHAR(6),
FECHA_INGRESO DATE,
FECHA_ARBITRAJE DATE,
PENALIDAD DECIMAL(10,2),
MORA DECIMAL(10,2),
GASTOS_COBRANZA DECIMAL(10,2),
GASTOS_COCHERA DECIMAL(10,2),
STATUS_SUNARP VARCHAR(255),
MARCA_AUTO_CAUTELAR VARCHAR(255),
MODELO_AUTO_CAUTELAR VARCHAR(255),
FECHA_AUTO_CAUTELAR DATE,
PARTIDA_REGISTRAL_AUTO_CAUTELAR VARCHAR(8),
PLACA_AUTO_CAUTELAR VARCHAR(6),
ID_STATUS_JUDICIAL INT,
ID_STATUS_PODER_JUDICIAL INT,
FECHA_INGRESO_MC DATE,
FECHA_CONCESORIO DATE,
ID_PROCURADOR INT,
TIPO_JUZGADO VARCHAR(255),
DISTRITO_JUZGADO VARCHAR(100),
NUMERO_DE_JUZGADO VARCHAR(100),
NUMERO_EXPEDIENTE VARCHAR(100),
CODIGO_CAUTELAR VARCHAR(100),
NOMBRE_ESPECIALISTA VARCHAR(100),
MONTO_PETITORIO DECIMAL(10,2),
ID_TIPO_IMPULSO INT,
TIPO_SOLICITUD_MEDIDA_CAUTELAR VARCHAR(255),
RESPUESTA_MEDIDA_CAUTEALR VARCHAR(255),
OBSERVACIONES VARCHAR(255),
CONSTRAINT FK_ID_STATUS_JUDICIAL  FOREIGN KEY(ID_STATUS_JUDICIAL) REFERENCES STATUS_JUDICIAL(ID_STATUS_JUDICIAL),
CONSTRAINT FK_ID_STATUS_PODER_JUDICIAL  FOREIGN KEY(ID_STATUS_PODER_JUDICIAL) REFERENCES STATUS_PODER_JUDICIAL(ID_STATUS_PODER_JUDICIAL),
CONSTRAINT FK_ID_PROCURADOR_2  FOREIGN KEY(ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
CONSTRAINT FK_ID_TIPO_IMPULSO  FOREIGN KEY(ID_TIPO_IMPULSO) REFERENCES TIPO_IMPULSO(ID_TIPO_IMPULSO)
)
GO
--Procedimientos de listado
exec SP_GUARDAR_USUARIO 'RONNY','18dejunio'
GO
exec SP_GUARDAR_ROL 'ADMINISTRADOR'
exec SP_GUARDAR_ROL 'TRABAJADOR'
GO
EXEC SP_ASIGNAR_ROL_USUARIO 1,1
EXEC SP_ASIGNAR_ROL_USUARIO 1,2
SELECT*FROM USUARIO
SELECT*FROM ROL
SELECT*FROM USUARIOS_ROLES